apiVersion: apps/v1
kind: {{ .Values.kind }}
metadata:
  name: {{ include "step-certificates.fullname" . }}
  labels:
    {{- include "step-certificates.labels" . | nindent 4 }}
spec:
  # Only one replica is supported at this moment
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "step-certificates.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "step-certificates.fullname" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "step-certificates.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if and .Release.IsInstall (not .Values.inject.enabled) }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          image: {{ .Values.image.initContainerRepository }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["sleep", "20"]
      {{- end }}
      securityContext:
        {{- if .Values.ca.runAsRoot }}
        runAsUser: 0
        {{- else }}
        runAsUser: 1000
        runAsNonRoot: true
        runAsGroup: 1000
        fsGroup: 1000
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [
            "/usr/local/bin/step-ca",
            "--password-file", "/home/step/secrets/passwords/password",
            "/home/step/config/ca.json"
          ]
          env:
          - name: NAMESPACE
            value: "{{ .Release.Namespace }}"
          ports:
            - name: https
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /health
              port: {{ .Values.service.targetPort }}
              scheme: HTTPS
          readinessProbe:
            initialDelaySeconds: 5
            httpGet:
              path: /health
              port: {{ .Values.service.targetPort }}
              scheme: HTTPS
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if not .Values.ca.runAsRoot }}
          securityContext:
            allowPrivilegeEscalation: false
          {{- end }}
          volumeMounts:
          - name: certs
            mountPath: /home/step/certs
            readOnly: true
          - name: config
            mountPath: /home/step/config
            readOnly: true
          - name: secrets
            mountPath: /home/step/secrets
            readOnly: true
          - name: ca-password
            mountPath: /home/step/secrets/passwords
            readOnly: true
          {{- if .Values.ca.db.enabled }}
          - name: database
            mountPath: /home/step/db
            readOnly: false
          {{- end }}
      volumes: 
      - name: certs
      {{- if .Values.inject.enabled }}           
        secret:
          secretName: {{ include "step-certificates.fullname" . }}-certs
      {{- else }}              
        configMap:
          name: {{ include "step-certificates.fullname" . }}-certs
      {{- end }}          
      - name: config
        configMap:
          name: {{ include "step-certificates.fullname" . }}-config
      - name: secrets
      {{- if .Values.inject.enabled }}
        secret:
          secretName: {{ include "step-certificates.fullname" . }}-secrets
      {{- else }}
        configMap:
          name: {{ include "step-certificates.fullname" . }}-secrets
      {{- end }}
      - name: ca-password
        secret:
          secretName: {{ include "step-certificates.fullname" . }}-ca-password
      {{- if and .Values.ca.db.enabled (not .Values.ca.db.persistent) }}
      - name: database
        emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if and .Values.ca.db.enabled .Values.ca.db.persistent }}
  volumeClaimTemplates:
  - metadata:
      name: database
      labels:
        app.kubernetes.io/name: {{ include "step-certificates.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      accessModes:
      {{- range .Values.ca.db.accessModes }}
        - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.ca.db.size | quote }}
      {{ if .Values.ca.db.existingClaim }}
      selector:
        matchLabels:
          name: {{ .Values.ca.db.existingClaim | quote }}
      {{- else }}
      {{- if .Values.ca.db.storageClass }}
      {{- if (eq "-" .Values.ca.db.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: {{ .Values.ca.db.storageClass | quote }}
      {{- end }}
      {{- end }}
      {{- end }}
  {{- end }}
